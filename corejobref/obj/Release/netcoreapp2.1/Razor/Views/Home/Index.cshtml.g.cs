#pragma checksum "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd1cce3cb61783a402ae58141dc4cba681946e29"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\_ViewImports.cshtml"
using corejobref;

#line default
#line hidden
#line 2 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\_ViewImports.cshtml"
using corejobref.Models;

#line default
#line hidden
#line 3 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd1cce3cb61783a402ae58141dc4cba681946e29", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6e62da4b1d824dfca76da8da237654f4ec10c624", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(28, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(116, 1565, true);
            WriteLiteral(@"
<style>

    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 400px;
        width: auto;
    }

    label {
        font-size: 13px;
    }

    body, label {
        font-family: ""Open Sans"", -apple-system, BlinkMacSystemFont, ""Segoe UI"", Roboto, Oxygen-Sans, Ubuntu, Cantarell, ""Helvetica Neue"", Helvetica, Arial, sans-serif;
    }
</style>

<meta charset=""utf-8"">
<meta name=""viewport"" content=""width=device-width, initial-scale=1"">

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>

<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css"">
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js""></script>

<link href=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"" rel=""st");
            WriteLiteral(@"ylesheet"" integrity=""sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"" crossorigin=""anonymous"">
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"" integrity=""sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"" crossorigin=""anonymous""></script>
<script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"" integrity=""sha384-xrRywqdh3PHs8keKZN+8zzc5TX0GRTLCcmivcbNJWm2rs5C8PRhcEn3czEjhAO9o"" crossorigin=""anonymous""></script>



");
            EndContext();
            BeginContext(1712, 98, true);
            WriteLiteral("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/openlayers/2.11/lib/OpenLayers.js\"></script>\r\n");
            EndContext();
            BeginContext(1841, 2155, true);
            WriteLiteral(@"


<script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert-dev.js""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.css"" />


<!-- Customer Details  -->
<div id=""jobrefdiv"" style=""display:none;"" class=""container"">

    <h1>Booking Detail</h1>

    <table style=""width:100%"" class=""mt-3"">

        <tr>
            <td><label id=""companyname"">Company Name: </label></td>
            <td><label class=""mx-5"" for=""companyname""></label></td>
        </tr>
        <tr>
            <td><label>Customer: </label> </td>
            <td><label class=""mx-5"" for=""custname""></label></td>
        </tr>
        <tr>
            <td><label id=""from"">From: </label></td>
            <td><label class=""mx-5"" for=""from""></label></td>
        </tr>
        <tr>
            <td><label id=""to"">To: </label></td>
            <td><label class=""");
            WriteLiteral(@"mx-5"" for=""to""></label></td>
        </tr>
        <tr>
            <td><label id=""fare"">Fare: </label></td>
            <td><label class=""mx-5"" for=""fare""></label></td>
        </tr>
        <tr>
            <td><label id=""status"">Status: </label></td>
            <td><label class=""mx-5"" for=""status""></label></td>
        </tr>
        <tr>
            <td><label id=""date"">Date: </label></td>
            <td><label class=""mx-5"" for=""date""></label></td>
        </tr>
        <tr>
            <td><label id=""time"">Time: </label></td>
            <td><label class=""mx-5"" for=""time""></label></td>
        </tr>
        <tr>
            <td><label id=""comment"">Comment: </label></td>
            <td><label class=""mx-5"" for=""comment""></label></td>
        </tr>

    </table>


    <div class=""input-group-append my-3"">
        <button class=""btn btn-outline-secondary"" type=""submit"" disabled id=""mapshow"">Track your driver</button>
    </div>
</div>
<!-- Customer Details  -->

    <!-- map");
            WriteLiteral(" div  -->\r\n    <div class=\"container\">\r\n        <div id=\"map\"></div>\r\n    </div>\r\n    <!-- map div  -->\r\n\r\n");
            EndContext();
            BeginContext(4070, 427, true);
            WriteLiteral(@"<script>
    $(document).ready(function(){
        $('#mapshow').on('click', initialize)

    });

        //$('#mapshow').click(function () {
        //$(""#map"").show();

    function initialize()
    {

        if (latitude == """" || longitude == """") {

            //$(document).ready(function () {
            //    $(""#map"").hide();

            //});

        } else {

        var speed = parseFloat(");
            EndContext();
            BeginContext(4498, 58, false);
#line 131 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                          Write(HttpContextAccessor.HttpContext.Session.GetString("speed"));

#line default
#line hidden
            EndContext();
            BeginContext(4556, 37, true);
            WriteLiteral(")\r\n        var latitude = parseFloat(");
            EndContext();
            BeginContext(4594, 56, false);
#line 132 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                             Write(HttpContextAccessor.HttpContext.Session.GetString("lat"));

#line default
#line hidden
            EndContext();
            BeginContext(4650, 38, true);
            WriteLiteral(")\r\n        var longitude = parseFloat(");
            EndContext();
            BeginContext(4689, 56, false);
#line 133 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                              Write(HttpContextAccessor.HttpContext.Session.GetString("lng"));

#line default
#line hidden
            EndContext();
            BeginContext(4745, 2443, true);
            WriteLiteral(@")
        var Originlat = parseFloat(_olat)
        var Originlng = parseFloat(_olon)
        var let1;
        var lng1;

            debugger
            //var uluru = { lat: latitude, lng: longitude };

            //// The map, centered at Uluru
            //var map = new google.maps.Map(
            //    document.getElementById('map'), {
            //        zoom: 16, center: uluru,
            //        zoomControl: false,
            //        scaleControl: true,
            //        disableDefaultUI: true,
            //        mapTypeControl: false,
            //        //  draggable: false,
            //        scaleControl: false,
            //        // scrollwheel: false,
            //        navigationControl: false,
            //        streetViewControl: false,
            //        mapTypeId: google.maps.MapTypeId.ROADMAP

            //    });
            //// The marker, positioned at Uluru

            //var marker = new google.maps.Marker({ position: ul");
            WriteLiteral(@"uru, map: map });

            //var let1;
            //var lng1;
            //marker.setMap(map);

            // $(""#map"").hide();



            debugger

           // open street map open layer library 2
            var zoom = 16;
            if(count == 1)
            {

                //$('#mapshow').prop('disabled',true);

                map = new OpenLayers.Map(""map"");
                var mapnik = new OpenLayers.Layer.OSM();
                map.addLayer(mapnik);


            //switch (count)
            //{
            //    case 0:
            //        map = new OpenLayers.Map(""map"");
            //        var mapnik = new OpenLayers.Layer.OSM();
            //        map.addLayer(mapnik);
            //        count++;
            //        break;
            //    default:
            //}


           // route between two point
           //var start_point = new OpenLayers.Geometry.Point(longitude, latitude);
           //var end_point = new OpenLayers.G");
            WriteLiteral(@"eometry.Point(Originlng,Originlat);
           //var vector = new OpenLayers.Layer.Vector();
           //vector.addFeatures([new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([start_point, end_point]).transform(new OpenLayers.Projection(""EPSG:4326""), new OpenLayers.Projection(""EPSG:900913"")))]);
           //map.addLayer(vector);
           // route between two point


");
            EndContext();
            BeginContext(7427, 2451, true);
            WriteLiteral(@"


            // Origin Marker

            //OriginMarker
                //debugger
                var originlonlat = new OpenLayers.LonLat(Originlng, Originlat).transform(
                new OpenLayers.Projection(""EPSG:4326""),
                new OpenLayers.Projection(""EPSG:900913"")
               );
               var originmarkers = new OpenLayers.Layer.Markers(""Markers"");
               map.addLayer(originmarkers);
               originmarkers.addMarker(new OpenLayers.Marker(originlonlat));
               // map.setCenter(originlonlat,5)
               // Origin Marker



            //<img src=""~/image/icons8-car-24.png"" />
            //Driver Marker
                var markers;
                DriverMarkerFunction(Originlng, Originlat);

            }
            count = 0;


            function DriverMarkerFunction(longitude,latitude)
            {
                var lonlat = new OpenLayers.LonLat(longitude,latitude).transform(
                  new OpenLayers.Pro");
            WriteLiteral(@"jection(""EPSG:4326""), // transform from WGS 1984
                  new OpenLayers.Projection(""EPSG:900913"") // to Spherical Mercator
                );

                markers = new OpenLayers.Layer.Markers(""Markers"");
                map.addLayer(markers);

                var size = new OpenLayers.Size(21,25);
                var offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);
                var icon = new OpenLayers.Icon(""https://img.icons8.com/ios-glyphs/30/000000/bad-taxi-driver.png"", size, offset);
                markers.addMarker(new OpenLayers.Marker(lonlat, icon));
                markers.addMarker(new OpenLayers.Marker(lonlat, icon.clone()));

               // markers.addMarker(new OpenLayers.Marker(lonlat));
               // map.zoomToExtent(markers.getDataExtent(8));


                map.setCenter(lonlat, zoom);

               //markers.clearMarkers();
            }
           // Driver marker

           // open street map open layer library 2
            Mov");
            WriteLiteral(@"eMarker();

            function MoveMarker() {

                //delay so you can see it move

                setInterval(function () {

                   // OriginMarker();

                    var str = """";
                    markers.clearMarkers();


                    if (let1 != null || let1 != undefined) {
                        $.ajax({
                            url: '");
            EndContext();
            BeginContext(9879, 24, false);
#line 283 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                             Write(Url.Action("Map","Home"));

#line default
#line hidden
            EndContext();
            BeginContext(9903, 1095, true);
            WriteLiteral(@"',
                            type: ""POST"",
                            contentType: 'application/json; charset=utf-8',
                            //data: JSON.stringify({ str : str }),
                            data: { str: str },
                            success: function (data) {

                                if (!data.success) {
                                    debugger
                                    let1 = data.let;
                                    lng1 = data.lng;

                                    //center = new google.maps.LatLng(let1, lng1);
                                    //marker.setPosition(center);
                                    //map.panTo(center);
                                    //OriginMarkerFunction();

                                    DriverMarkerFunction(lng1, let1);

                                } else {
                                }
                            }

                        });

                    } else ");
            WriteLiteral("{\r\n                        $.ajax({\r\n                            url: \'");
            EndContext();
            BeginContext(10999, 24, false);
#line 310 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                             Write(Url.Action("Map","Home"));

#line default
#line hidden
            EndContext();
            BeginContext(11023, 1818, true);
            WriteLiteral(@"',
                            type: ""POST"",
                            contentType: 'application/json; charset=utf-8',
                            //data: JSON.stringify({ str : str }),
                            data: { str: str },
                            success: function (data) {
                                if (!data.success) {

                                    let1 = data.let;
                                    lng1 = data.lng;

                                    //center = new google.maps.LatLng(let1, lng1);
                                    //marker.setPosition(center);
                                    //map.panTo(center);
                                    //OriginMarkerFunction();
                                    DriverMarkerFunction(lng1,let1);

                                } else {
                                }
                            }

                        });
                    }


                }, 5000);
            }
        }");
            WriteLiteral(@"
    }

    //});


    //var map;
    //var infoWindow;

    //function initMap() {

        //map = new google.maps.Map(document.getElementById('map'), {
        //    zoom: 15,
        //    center: { lat: 51.3739542290568, lng: -0.244882330298424 },
        //    zoomControl: false,
        //    scaleControl: true,
        //    disableDefaultUI: true,
        //    mapTypeControl: false,
        //    //  draggable: false,
        //    scaleControl: false,
        //    scrollwheel: false,
        //    navigationControl: false,
        //    streetViewControl: false,
        //    mapTypeId: google.maps.MapTypeId.ROADMAP

        //});


        // Initialize and add the map

        //     function initMap() {
        // The location of Uluru
");
            EndContext();
            BeginContext(13051, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(16590, 166, true);
            WriteLiteral("\r\n</script>\r\n\r\n\r\n\r\n<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2\"></script>\r\n\r\n\r\n");
            EndContext();
            BeginContext(16824, 1597, true);
            WriteLiteral(@"<script>



        var _olat;
        var _olon;
        var count;

    function OnHttpPost() {

        var _jobref = $('#jobref').val();
        var _custname;
        var _from;
        var _to;
        var _fare;
        var _comment;
        var _status;
        var _companyname;
        var _oldfare;
        var _date;
        var _time;


        var inputid = document.getElementById('jobref').value;
        debugger

        if (inputid !== """" && inputid !== undefined && inputid !== null) {

            var message = inputid;

            $('#mapshow').prop('disabled', true);



            let timerInterval
            Swal.fire({
                title: 'Processing !',
                html: 'I will close in <b></b> milliseconds.',
                timer: 3000,
                onBeforeOpen: () => {
                    Swal.showLoading()
                    timerInterval = setInterval(() => {
                        Swal.getContent().querySelector('b')
      ");
            WriteLiteral(@"                      .textContent = Swal.getTimerLeft()
                    }, 100)
                },
                onClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.timer
                ) {
                    console.log("""")
                }
            })


            $.ajax({
                type: ""POST"",
                url: '");
            EndContext();
            BeginContext(18422, 26, false);
#line 541 "C:\Users\zeej laptop\Source\Repos\corejobref\corejobref\Views\Home\Index.cshtml"
                 Write(Url.Action("Index","Home"));

#line default
#line hidden
            EndContext();
            BeginContext(18448, 5716, true);
            WriteLiteral(@"',
                data: JSON.stringify({
                    jobref: _jobref
                }),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function (data) {

                    if (data != null) {

                        _olat = data.olat;
                        _olon = data.olon;
                        //debugger
                        _custname = data.custname;
                        _from = data.from;
                        _to = data.to;
                        _fare = data.fare;
                        _dispatchtime = data.dispatchtime;
                        _comment = data.comment;
                        _status = data.cstate;
                        _companyname = data.companyname[3];
                        _oldfare = data.oldfare;
                        _date = data.date;
                        _time = data.time;


                        count = 0;
                        // chang");
            WriteLiteral(@"es here 4 and map
                        if (data.bookedby == ""website"" && data.jstate == ""allocated"" && data.cstate == ""despatched"" && data.dstate == ""Accepted"" && data.flag == 1) {
                            $('#mapshow').prop('disabled', false);
                            $(""#map"").show();
                            count++;
                        }
                        else {
                            //$(""#map"").hide();
                            $('#map').empty();
                        }

                        //if (_comment == """")
                        //{
                        //    _comment = ""no comment"";
                        //}
                        switch (_comment) {
                            case """":
                                _comment = ""no comment""
                                break;
                            default:
                        }

                        switch (_status) {
                            case ""booked"":
    ");
            WriteLiteral(@"                            _status = ""Booked"";
                                break;
                            case ""completed"":
                                _status = ""Completed"";
                                break;
                            case ""cancelled"":
                                _status = ""Cancelled"";
                                _fare = _oldfare;
                                break;
                            default:
                                _status = ""no status"";
                                break;
                        }




                        jQuery(""label[for='custname']"").html(_custname)
                        jQuery(""label[for='from']"").html(_from);
                        jQuery(""label[for='to']"").html(_to);
                        jQuery(""label[for='fare']"").html(""£ "" + _fare);
                        jQuery(""label[for='comment']"").html(_comment);
                        jQuery(""label[for='status']"").html(_status);
             ");
            WriteLiteral(@"           jQuery(""label[for='companyname']"").html(_companyname);
                        jQuery(""label[for='date']"").html(_date);
                        jQuery(""label[for='time']"").html(_time);


                    }
                    else {

                        let timerInterval
                        Swal.fire({
                            title: 'Job Not Found...!',
                            html: 'I will close in <strong></strong> milliseconds.',
                            timer: 3000,
                            onBeforeOpen: () => {
                                Swal.showLoading()
                                timerInterval = setInterval(() => {
                                    Swal.getContent().querySelector('strong')
                                        .textContent = Swal.getTimerLeft()
                                }, 100)
                            },
                            onClose: () => {
                                clearInterval(timerInterv");
            WriteLiteral(@"al)
                            }
                        }).then((result) => {
                            if (
                                /* Read more about handling dismissals below */
                                result.dismiss === Swal.DismissReason.timer
                            ) {
                                console.log("""")
                            }
                        })

                        //$(""#map"").hide();
                        // window.setTimeout(function(){
                        //$('#mapshow').prop('disabled', true);
                        //}, 5000);

                        //swal(""Invalid job Reference"");

                        setTimeout(function () {
                            window.location.reload();
                        }, 3000);

                    }


                    //$(""#custname"").val(_custname),
                    //$(""#from"").val(_from),
                    //$(""#to"").val(_to),
                    //$(""#fa");
            WriteLiteral(@"re"").val(_fare),
                    //$(""#dispatchtime"").val(_dispatchtime),
                    //$(""#comment"").val(_comment)

                    document.getElementById('jobrefdiv').style.display = ""block"";

                },
                failure: function (data) {
                    alert(""Invalid"");
                }
            });



        }
        else
        {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: 'Please Enter a job refernce...!',
            })
        }

    }

</script>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
